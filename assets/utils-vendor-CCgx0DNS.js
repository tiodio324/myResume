var e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function t(t,n=0){return(e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+`-`+e[t[n+4]]+e[t[n+5]]+`-`+e[t[n+6]]+e[t[n+7]]+`-`+e[t[n+8]]+e[t[n+9]]+`-`+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]).toLowerCase()}var n,r=new Uint8Array(16);function i(){if(!n){if(typeof crypto>`u`||!crypto.getRandomValues)throw Error(`crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported`);n=crypto.getRandomValues.bind(crypto)}return n(r)}var a={randomUUID:typeof crypto<`u`&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function o(e,n,r){e||={};let a=e.random??e.rng?.()??i();if(a.length<16)throw Error(`Random bytes length must be >= 16`);if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,n){if(r||=0,r<0||r+16>n.length)throw RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let e=0;e<16;++e)n[r+e]=a[e];return n}return t(a)}function s(e,t,n){return a.randomUUID&&!t&&!e?a.randomUUID():o(e,t,n)}var c=s;export{c as t};